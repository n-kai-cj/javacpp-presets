// Targeted by JavaCPP version 1.5.4-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.parquet;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.arrow.*;
import static org.bytedeco.arrow.global.arrow.*;

import static org.bytedeco.arrow.global.parquet.*;


@Namespace("parquet") @NoOffset @Properties(inherit = org.bytedeco.arrow.presets.parquet.class)
public class RowGroupMetaData extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public RowGroupMetaData(Pointer p) { super(p); }

  // API convenience to get a MetaData accessor
  public static native @UniquePtr RowGroupMetaData Make(
        @Const Pointer metadata, @Const SchemaDescriptor schema,
        @Const ApplicationVersion writer_version/*=nullptr*/,
        @SharedPtr InternalFileDecryptor file_decryptor/*=nullptr*/);
  public static native @UniquePtr RowGroupMetaData Make(
        @Const Pointer metadata, @Const SchemaDescriptor schema);

  // row-group metadata
  public native int num_columns();
  public native @Cast("int64_t") long num_rows();
  public native @Cast("int64_t") long total_byte_size();
  // Return const-pointer to make it clear that this object is not to be copied
  public native @Const SchemaDescriptor schema();
  // Indicate if all of the RowGroup's ColumnChunks can be decompressed.
  public native @Cast("bool") boolean can_decompress();

  public native @UniquePtr ColumnChunkMetaData ColumnChunk(int i);
}
